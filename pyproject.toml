[tool.poetry]
name = "new-project"  # Need to change
version = "0.1.0"
description = "A new Python project."  # Need to change
authors = ["Jooeon Kim <joo2theeon@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12"

[tool.poetry.group.dev.dependencies]
pytest = ">=8.3.4"
black = ">=25.1.0"
ruff = ">=0.9.6"
pre-commit = ">=4.1.0"
mypy = ">=1.15.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 110

[tool.ruff]
line-length = 110  # black과 동일하게 설정 (충돌 방지)
target-version = "py312"  # python 3.12
fix = true  # 자동 수정 활성화 (default: false)

[tool.ruff.lint]
# https://docs.astral.sh/ruff/rules/
select = [
    "E",  # PEP8-Error
    "W",  # PEP8-Warning
    "F",  # Flake8
    "I",  # isort
    "D",  # Docstring
    "ARG",  # Docstring Argument 매칭
    "RUF",  # Ruff-specific rules
]
ignore = [
    "D100",  # 모듈 Docstring 누락 허용
    "D104",  # 공백 클래스 Docstring 누락 허용
    "D107",  # _ 로 시작하는 비공개 클래스 Docstring 누락 허용
    "D105",  # Magic Method Docstring 누락 허용
]
pydocstyle.convention = "google"  # pep257, google, numpy 중 선택

[tool.ruff.format]
quote-style = "double"  # Black과 동일한 따옴표 스타일
indent-style = "space"  # 4 spaces 유지
line-ending = "auto"  # 자동 감지
skip-magic-trailing-comma = false  # Black처럼 trailing comma 유지

[tool.bandit]
exclude_dirs = [
    "hkjv_crawler/tests",
]
skips = [
    "B113",  # Call to requests without timeout
    "B101",  # Use of assert
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true  # 리턴 타입이 Any인 경우 경고
warn_unused_configs = true  # 사용되지 않는 설정이 있으면 경고
warn_redundant_casts = true  # 불필요한 타입 변환 경고
warn_unreachable = true  # 실행되지 않는 코드 경고
disallow_untyped_calls = true  # 타입이 명시되지 않은 함수 호출 금지
disallow_untyped_defs = true  # 타입 어노테이션 없는 함수 정의 금지
check_untyped_defs = true  # 타입 어노테이션 없는 함수 내부도 검사
show_error_codes = true  # 에러 코드 출력
exclude = [
    "hkjv_crawler/tests",  # 테스트 코드 제외
]
disable_error_code = [
    "misc",  # 모든 misc 에러 코드 비활성화
    "no-untyped-def",  # 타입 어노테이션 없는 함수 정의 에러 비활성화
    "import-untyped",  # 타입 어노테이션 없는 import 에러 비활성화
    "assignment",  # 서로 다른 타입 간 할당 에러 비활성화
    "no-redef",  # 변수 재할당 에러 비활성화
    "return-value",  # 리턴 값 타입 에러 비활성화
]